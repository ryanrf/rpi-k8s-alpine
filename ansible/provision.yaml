---
- hosts: all
  become: "yes"
  vars_files:
    - vars_enc
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"
        use: alpine

    - name: Set authorized key from local file
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', '~/.ssh/id_ecdsa.pub') }}"

    - name: Create incomplete-downloads directory
      file:
        path: "/data/k3s/incomplete-downloads"
        state: directory
        mode: '0755'

    - name: copy template files to read-only file-system
      block:
        - name: Try to copy k3s confd values
          template:
            src: "templates/k3s_confd.tmpl"
            dest: "/etc/conf.d/k3s"
          notify:
            - stop k3s
        
        - name: Try to copy iscsid.conf
          copy:
            src: "files/iscsid.conf"
            dest: "/etc/iscsi/iscsid.conf"
      rescue:
        - meta: flush_handlers

        - name: remount-rw
          mount:
            path: /
            state: remounted
            opts: rw

        - name: Copy k3s confd values
          template:
            src: "templates/k3s_confd.tmpl"
            dest: "/etc/conf.d/k3s"
          notify:
            - restart k3s

        - name: Copy iscsid.conf
          copy:
            src: "{{ playbook_dir }}/files/iscsid.conf"
            dest: /etc/iscsi/iscsid.conf
          notify:
            - restart k3s

        - name: ensure k3s is enabled at startup
          service:
            name: k3s
            enabled: yes

      always:
        - name: remount-ro
          register: remount
          mount:
            path: /
            state: remounted
            opts: ro

    - debug:
        msg: "remount {{ remount }}"

    - name: install custom k8s manifests
      loop: "{{ lookup('fileglob', 'k8s/*.yaml', wantlist=True) }}"
      copy:
        src: "{{ item }}"
        dest: "/var/lib/rancher/k3s/server/manifests/{{ item.split('/') | last }}"
      when: "'server' in group_names"
      tags:
      - k8s

    - name: install custom k8s manifests (templates)
      template:
        src: "templates/{{ item }}.tmpl"
        dest: "/var/lib/rancher/k3s/server/manifests/{{ item }}.yaml"
      loop:
        - cloudflare-api-token-secret
        - cloudflared-credentials-secret
        - metallb-addresspool
      when: "'server' in group_names"
      tags:
      - k8s

    - name: Make sure required services are started
      service:
        name: "{{ item }}"
        state: started
      loop:
        - k3s
        - rpcbind
      tags:
      - k8s

  handlers:
    - name: restart k3s
      service:
        name: k3s
        state: restarted
    - name: stop k3s
      service:
        name: k3s
        state: stopped
      
# set motd to something helpful for k8s (like node name, node role, IP address)
# configure uploading state file to S3
# set root password
